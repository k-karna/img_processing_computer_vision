%% Process the "liquidVideo.mp4" and calculate the height of the liquid in each frame
% Question 1: Find suitable background frame

v = VideoReader("liquidVideo.mp4")
%implay('liquidVideo.mp4')

firstFrame = im2double(read(v,1));
%imshow(firstFrame);
%% 
% Question 2: Test out the background subtraction method on frame 175. What 
% is the correct result?

f167 = read(v,175);
f167 = im2double(f167);

%absolute difference in frame
frameDiff = abs (firstFrame - f167);
imshow(frameDiff);
montage({frameDiff,f167})
%% 
% Question 3: Next task is to isolate the liquid from the images corresponding 
% to the difference between the background and your chosen example frames

test_img = im2gray(frameDiff);
imshow(test_img);
liquidsegment(test_img);
numel(test_img);
%% 
% Question 4 : After performing background subtraction, grayscale thresholding, 
% and morphological operations on frame number 175, what is the percentage of 
% true pixels (corresponding to the liquid) in your final mask
% 
% function below

liquidSeg1(test_img)
%% 
% Question 5:

f167= read(v,167);
f167 = im2double(f167);

%absolute difference in frame
frameDiff1 = abs (firstFrame - f167);
imshow(frameDiff1);
test_img1 = im2gray(frameDiff1);
imshow(test_img1);
liquidSeg1(test_img1)
%%
function results = liquidSeg1(X)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the Image Segmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 04-Jan-2023
%----------------------------------------------------


% Threshold image - manual threshold
BW = im2gray(X) > 2.500000e-01;

% Fill holes
BW = imfill(BW, 'holes');

% Open mask with default
radius = 2;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Close mask with default
radius = 3;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Create masked image.
%maskedImage = X;
%maskedImage(~BW) = 0;

props = regionprops("table",BW,"Area","EulerNumber");

results.BW = BW;
results.region = sum(props.EulerNumber);
results.Area = sum(props.Area);

end
%function results = liquidsegment(X)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the Image Segmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 04-Jan-2023
%----------------------------------------------------


% Threshold image - global threshold
%BW = imbinarize(im2gray(X)) > 2.500000e-01;

% Create masked image.
%maskedImage = X;
%maskedImage(~BW) = 0;
%results.BW = BW;
%end